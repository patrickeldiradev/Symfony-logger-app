version: "3.7"
services:
    app:
        build:
            args:
                user: admin
                uid: 1000
            context: ./
            dockerfile: docker/Dockerfile
        image: app
        extra_hosts:
            - host.docker.internal:host-gateway
        container_name: app
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
            IGNITION_LOCAL_SITES_PATH: '${PWD}'

        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
        networks:
            - local

    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - mysqldb:/var/lib/mysql
            - ./docker/mysql:/docker-entrypoint-initdb.d
        networks:
            - local

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - 8000:80
        volumes:
            - ./:/var/www/html
            - ./docker/nginx:/etc/nginx/conf.d/
        networks:
            - local

networks:
    local:
        driver: bridge

volumes:
    mysqldb:
    cache:
        driver: local
    elasticsearch:
        driver: local
